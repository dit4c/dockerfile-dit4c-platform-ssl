user  nginx;
worker_processes  1;
daemon off;

error_log  /var/log/nginx/error.log;

pid        /run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    client_max_body_size 1G;

    index   index.html index.htm;

    server {
      listen 80;
      server_name  _ {{domain}} *.{{domain}};
      
      location / {
        rewrite     ^   https://$host$request_uri? permanent;
      }
      
      # in case you want to run with self-signed cert in test env
      location /public-keys {
        proxy_pass http://dit4c-highcommand:9000;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
      }
    }

    server {
      listen       *:443;
      server_name  _ {{domain}};
      ssl on;
      ssl_certificate       /etc/ssl/server.crt;
      ssl_certificate_key   /etc/ssl/server.key;

      location / {
        proxy_pass http://dit4c-highcommand:9000;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
      }
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
      listen       *:443;
      server_name  *.{{domain}};
      ssl on;
      ssl_certificate       /etc/ssl/server.crt;
      ssl_certificate_key   /etc/ssl/server.key;
    
      location / {
        proxy_pass http://hipache:8080;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        add_header Cache-Control must-revalidate;
      }

    }

}